From 87a46e67cce9fc6bbc49f31c4db367c650a47a7b Mon Sep 17 00:00:00 2001
From: Dhairya Gundechia <dhairyagoswami2001@gmail.com>
Date: Thu, 1 Jun 2023 10:22:26 +0300
Subject: [PATCH] Create Patch File

---
 datafeed/server3.py    |  2 +-
 src/DataManipulator.ts | 35 ++++++++++++++++++++++++-----------
 src/Graph.tsx          | 28 ++++++++++++++++------------
 src/index.tsx          |  2 +-
 4 files changed, 42 insertions(+), 25 deletions(-)

diff --git a/datafeed/server3.py b/datafeed/server3.py
index 2de4e28..c6d3091 100644
--- a/datafeed/server3.py
+++ b/datafeed/server3.py
@@ -317,4 +317,4 @@ if __name__ == '__main__':
     if not os.path.isfile('test.csv'):
         print ("No data found, generating...")
         generate_csv()
-    run(App())
+    run(App())
\ No newline at end of file
diff --git a/src/DataManipulator.ts b/src/DataManipulator.ts
index 7f62295..4d479aa 100644
--- a/src/DataManipulator.ts
+++ b/src/DataManipulator.ts
@@ -1,20 +1,33 @@
 import { ServerRespond } from './DataStreamer';
 
 export interface Row {
-  stock: string,
-  top_ask_price: number,
+  price_abc: number,
+  price_def: number,
+  ratio: number,
   timestamp: Date,
+  upper_bound: number,
+  lower_bound: number,
+  trigger_alert: number | undefined,
+  
 }
 
-
 export class DataManipulator {
-  static generateRow(serverResponds: ServerRespond[]) {
-    return serverResponds.map((el: any) => {
-      return {
-        stock: el.stock,
-        top_ask_price: el.top_ask && el.top_ask.price || 0,
-        timestamp: el.timestamp,
+  static generateRow(serverResponds: ServerRespond[]): Row {
+    const priceABC = (serverResponds[0].top_ask.price + serverResponds[0].top_bid.price)/2;
+    const priceDEF = (serverResponds[1].top_ask.price + serverResponds[1].top_bid.price)/2;
+    const ratio = priceABC / priceDEF;
+    const upper_bound = 1 + 0.01;
+    const lower_bound = 1 - 0.01;
+    return {
+      price_abc: priceABC,
+      price_def: priceDEF,
+      ratio,
+      timestamp: serverResponds[0].timestamp > serverResponds[1].timestamp ?
+                  serverResponds[0].timestamp : serverResponds[1].timestamp,
+      upper_bound: upper_bound,
+      lower_bound: lower_bound,
+      trigger_alert: (ratio > upper_bound || ratio < lower_bound ) ? ratio : undefined,
+
       };
-    })
   }
-}
+}
\ No newline at end of file
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 277797d..a58b02e 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -1,5 +1,5 @@
 import React, { Component } from 'react';
-import { Table } from '@finos/perspective';
+import { Table } from '@jpmorganchase/perspective';
 import { ServerRespond } from './DataStreamer';
 import { DataManipulator } from './DataManipulator';
 import './Graph.css';
@@ -23,10 +23,13 @@ class Graph extends Component<IProps, {}> {
     const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
-      stock: 'string',
-      top_ask_price: 'float',
-      top_bid_price: 'float',
+      price_abc: 'float',
+      price_def: 'float',
+      ratio: 'float',
       timestamp: 'date',
+      upper_bound: 'float',
+      lower_bound: 'float',
+      trigger_alert: 'float',
     };
 
     if (window.perspective && window.perspective.worker()) {
@@ -36,25 +39,26 @@ class Graph extends Component<IProps, {}> {
       // Load the `table` in the `<perspective-viewer>` DOM reference.
       elem.load(this.table);
       elem.setAttribute('view', 'y_line');
-      elem.setAttribute('column-pivots', '["stock"]');
       elem.setAttribute('row-pivots', '["timestamp"]');
-      elem.setAttribute('columns', '["top_ask_price"]');
+      elem.setAttribute('columns', '["ratio","lower_bound","upper_bound","trigger_alert"]');
       elem.setAttribute('aggregates', JSON.stringify({
-        stock: 'distinctcount',
-        top_ask_price: 'avg',
-        top_bid_price: 'avg',
+        price_abc: 'avg',
+        price_def: 'avg',
         timestamp: 'distinct count',
+        upper_bound: 'avg',
+        lower_bound: 'avg',
+        trigger_alert: 'avg',
       }));
     }
   }
 
   componentDidUpdate() {
     if (this.table) {
-      this.table.update(
+      this.table.update([
         DataManipulator.generateRow(this.props.data),
-      );
+      ]);
     }
   }
 }
 
-export default Graph;
+export default Graph;
\ No newline at end of file
diff --git a/src/index.tsx b/src/index.tsx
index f742118..65bafbc 100755
--- a/src/index.tsx
+++ b/src/index.tsx
@@ -8,4 +8,4 @@ declare global {
   interface Window { perspective: any; }
 }
 
-ReactDOM.render(<App />, document.getElementById('root'));
+ReactDOM.render(<App />, document.getElementById('root'));
\ No newline at end of file
-- 
2.40.1.windows.1

